syntax = "proto3";

package gophkeeper.gophkeeperapi.v1;

import "buf/validate/validate.proto";

option go_package = "gophkeeper/gophkeeperapi/v1";

message CardV1 {
  string id = 1;
  string user_id = 2;
  string number = 3;
  string owner = 4;
  string expiry = 5;
  string cvc = 6;
  string pin = 7;
  string comment = 8;
}

message AddCardRequestV1 {
  string number = 1 [(buf.validate.field).cel = {
    id: "number",
    expression: "this.matches('^(\\\\d{4}[- ]?){3}\\\\d{4}$')",
    message: "Card number must be 16 digits long"
  }];
  string owner = 2 [(buf.validate.field).cel = {
    id: "owner",
    expression: "size(this) >= 1",
    message: "Owner must not be empty"
  }];
  string expiry = 3 [(buf.validate.field).cel = {
    id: "expiry",
    expression: "this.matches('^(0[1-9]|1[0-2])/\\\\d{2}$')",
    message: "Expiry must be in MM/YY format"
  }];
  string cvc = 4 [(buf.validate.field).cel = {
    id: "cvc",
    expression: "size(this) == 3",
    message: "CVC must be 3 digits long"
  }];
  string pin = 5 [(buf.validate.field).cel = {
    id: "pin",
    expression: "size(this) == 4",
    message: "PIN must be 4 digits long"
  }];
  string comment = 6 [(buf.validate.field).cel = {
    id: "comment",
    expression: "size(this) <= 1024",
    message: "Comment should not exceed 1024 characters"
  }];
}

message AddCardResponseV1 {}

message DeleteCardRequestV1 {
  string id = 1 [(buf.validate.field).cel = {
    id: "id",
    expression: "size(this) >= 1",
    message: "Deleted card data ID must not be empty"
  }];
}

message DeleteCardResponseV1 {}

message GetCardsRequestV1 {}

message GetCardsResponseV1 {
  repeated CardV1 cards = 1;
}
